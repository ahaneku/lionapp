package ng.edu.unnportal.com.lionapp;import ng.edu.unn.UnnParser.UnnParser.UnnFeed;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.CardView;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.TextView;import android.widget.ImageView;import android.view.LayoutInflater;import android.view.ViewGroup;import android.view.View;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import java.util.List;import java.util.ArrayList;import android.text.Spanned;import android.text.Html;import com.squareup.picasso.NetworkPolicy;import com.squareup.picasso.Picasso;import android.content.Context;public class Adapter extends RecyclerView.Adapter<Adapter.ViewHolder>{    private List<UnnFeed> feedList = new ArrayList<>();    private LionApp.ViewFeedListener viewFeedIn;    private String from;    private Context context;    public static  int lastP = -1;    public Adapter(List<UnnFeed> feedList, LionApp.ViewFeedListener viewFeed, String from, Context context){        this.feedList = feedList;        this.viewFeedIn = viewFeed;        this.from = from;        this.context = context;    }    @Override    public Adapter.ViewHolder onCreateViewHolder(ViewGroup parent, int typeView){        View view = LayoutInflater.from(parent.getContext())                    .inflate(R.layout.feeds_content, parent, false);        ViewHolder vh = new ViewHolder(view);        return vh;    }    @Override    public void onBindViewHolder(ViewHolder holder, int position){        final int posi = position;        holder.card.setOnClickListener(new View.OnClickListener(){            @Override        public void onClick(View view){                viewFeedIn.viewFeed(feedList.get(posi));            }        });        if(from.equals(LionApp.GET_FROM_URL)){            Spanned span = Html.fromHtml(feedList.get(posi).getContent());            //  holder.feedImage.setImageBitmap(feedList.get(position).getfeedImg());            holder.feedTitle.setText(feedList.get(position).getTitle());            holder.feedContent.setText(span);            holder.date.setText(feedList.get(position).getDate());            Picasso.with(holder.feedTitle.getContext()).load(feedList.get(position).getImgLink())                    .centerCrop().into(holder.feedImage);            animateView(holder, position);        }else if(from.equals(LionApp.GET_FROM_DB)){            Spanned span = Html.fromHtml(feedList.get(posi).getContent());            //  holder.feedImage.setImageBitmap(feedList.get(position).getfeedImg());            holder.feedTitle.setText(feedList.get(position).getTitle());            holder.feedContent.setText(span);            holder.date.setText(feedList.get(position).getDate());            Picasso.with(holder.feedTitle.getContext()).load(feedList.get(position).getImgLink()).networkPolicy(NetworkPolicy.OFFLINE)                    .centerCrop().into(holder.feedImage);            animateView(holder, position);        }     }    @Override    public int getItemCount(){            return feedList.size();    }    public class ViewHolder extends RecyclerView.ViewHolder {        private CardView card;        private TextView feedTitle;        private ImageView feedImage;        private TextView feedContent;        private TextView date;        public ViewHolder(View card){            super(card);            this.card = (CardView) card.findViewById(R.id.feedContentRoot);            feedTitle = (TextView) card.findViewById(R.id.feed_title);            feedImage = (ImageView) card.findViewById(R.id.feed_image);            feedContent = (TextView) card.findViewById(R.id.feed_content);            date = (TextView) card.findViewById(R.id.feed_date);          }    }    @Override    public void onViewDetachedFromWindow(ViewHolder holder) {        super.onViewDetachedFromWindow(holder);        holder.card.clearAnimation();    }    public void animateView(ViewHolder holder, int position){        Animation fadeIn = AnimationUtils.loadAnimation(context, R.anim.fade_in);        if(position > lastP) {            holder.card.startAnimation(fadeIn);            lastP = position;        }    }}